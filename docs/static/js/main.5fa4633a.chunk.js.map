{"version":3,"sources":["Components/AssetsItem.js","Components/Assets.js","Components/Entities.js","App.js","services/fecthAssets.js","services/fecthEntities.js","index.js"],"names":["AssetsItem","asset","this","props","className","id","t_street_name","n_number","t_city","t_code","React","Component","Assets","assets","Fragment","map","key","to","Entities","routerProps","entities","menuCollapsible","idCollap","printCode","assetId","parseInt","match","params","entitiesDos","filter","item","id_asset","onClick","t_entry_code","n_entry_area_gross_interior","t_entry_tenant_name","App","state","getAssets","bind","getEntities","fetch","then","response","json","data","setState","event","newId","currentTarget","console","log","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5fa4633a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AssetsItem extends React.Component {\n  render() {\n    const { asset } = this.props;\n    return (\n      <div className=\"container-item_list\">\n         <h2 className=\"title-item_list\" id={`${asset.t_street_name}`}>{asset.t_street_name}, {asset.n_number}</h2>\n         <p className=\"city-item_list\" >{asset.t_city}  <i className=\"fas fa-map-marker-alt\"></i></p>\n         <p className=\"code-item_list\" >{asset.t_code}</p>\n      </div>\n    )\n  }\n}\n\nAssetsItem.propTypes = {\n  asset: PropTypes.object.isRequired,\n};\nexport default AssetsItem;","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport AssetsItem from './AssetsItem'\n\nclass Assets extends React.Component {\n  render() {\n    const { assets } = this.props;\n    return (\n      <React.Fragment>\n        <h2 className=\"assets-main-title\" >ASSETS</h2>\n        <div className=\"assets-container\">\n\n          <ol className=\"assets-list\">\n            {assets.map(asset => {\n              return (\n                <li className=\"assets-item_list\" key={asset.id}>\n                  <AssetsItem asset={asset}>\n                  </AssetsItem>\n                  <Link to={`/asset-entities/${asset.id}`} >\n                    <button className=\"asts-btn-to-enti\">Entities</button>\n                  </Link>\n                </li>\n              )\n            })}\n          </ol>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\nAssets.propTypes = {\n  assets: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\n\nexport default Assets;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n//import ContextMenu from 'react-context-menu';\n\n\nconst Entities = props => {\n  const { routerProps, entities, menuCollapsible, idCollap, printCode } = props;\n  const assetId = parseInt(routerProps.match.params.assetId);\n  const entitiesDos = entities.filter(item => item.id_asset === assetId);\n\n  if (entitiesDos[0]) {\n\n    return (\n      <React.Fragment>\n        <Link to={`/`} >\n          <button className=\"assets-link\">\n            Return \n          </button>\n        </Link>\n        <div className=\"entities-container\">\n          <ul className=\"entities-list\">\n            {entitiesDos.map(item => {\n              return (\n                <li className=\"entities-item_list\" key={item.id}>\n                  <div className=\"container-ent-item_list\">\n                    <div className=\"box-ent-item_list\" onClick={menuCollapsible} id={item.id}>\n                      <h2 className=\"title-ent-item_list\" >Entry code:  {item.t_entry_code}  <i className={`fas fa-chevron-down ${(parseInt(item.id) === parseInt(idCollap)) ? 'hidden' : ''}`}></i>\n                      </h2>\n                      <p className=\"ent-area\">Interior area: {item.n_entry_area_gross_interior} m2</p>\n                      <p className=\"ent-tenant-name\">Tenant name: {item.t_entry_tenant_name} </p>\n                    </div>\n                    {/*<ContextMenu contextId={item.id}  items={[{label:item.t_entry_code , onClick:printCode}]} />*/}\n                    <div className={`collapsible ${(parseInt(item.id) === parseInt(idCollap)) ? '' : 'hidden'}`}>\n                      <button className=\"btn-print\" onClick={printCode} id={item.t_entry_code}>\n                        Print on Console\n                      </button>\n                    </div>\n                  </div>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n        \n      </React.Fragment>\n    )\n  } else {\n    return (\n      <React.Fragment>\n        <p>Entidades no existentes</p>\n        <Link to=\"/\" >\n          <button className=\"assets-link\">\n            Return \n          </button>\n        </Link>\n      </React.Fragment>\n    )\n  }\n\n}\n\nEntities.propTypes = {\n  entities: PropTypes.arrayOf(PropTypes.object).isRequired,\n  menuCollapsible:PropTypes.func.isRequired,\n  idCollap:PropTypes.string.isRequired,\n  printCode:PropTypes.func.isRequired\n};\n\nexport default Entities;","import React from 'react';\nimport './scss/App.scss';\nimport { Switch, Route } from 'react-router-dom';\nimport Assets from './Components/Assets';\nimport Entities from './Components/Entities';\nimport { fetchAssets } from './services/fecthAssets';\nimport { fetchEntities } from './services/fecthEntities';\n\nclass App extends  React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      assets:[],\n      entities:[],\n      idCollap:''\n    }\n    this.getAssets = this.getAssets.bind(this);\n    this.getEntities = this.getEntities.bind(this);\n    this.menuCollapsible =this.menuCollapsible.bind(this);\n    this.printCode =this.printCode.bind(this);\n  }\n  componentDidMount(){\n    this.getAssets();\n    this.getEntities();\n  }\n\n  getAssets(){\n    fetchAssets()\n    .then(data=>{\n      this.setState({\n        assets:data.assets\n      })\n    })\n  }\n\n  getEntities(){\n    fetchEntities()\n    .then(data=>{\n      this.setState({\n        entities:data.entities\n      })\n    })\n  }\n  menuCollapsible(event){\n    const newId = event.currentTarget.id;\n    this.setState({\n      idCollap:newId\n    })\n  }\n  \n  printCode(event){\n    console.log(event.currentTarget.id);\n    this.setState({\n      idCollap:''\n    })\n  }\n\n  render(){\n    return (\n\n      <div className=\"App\">\n\n        <header className=\"App-header\">\n          <h1 className=\"App-header_tittle\">\n            Elix technical test\n          </h1>\n        </header>\n\n        <main className=\"App-main\">\n          <Switch>\n            <Route exact path=\"/\" render={() => {\n              return (\n                <Assets assets={this.state.assets}/>\n              )}}/>\n            <Route path=\"/asset-entities/:assetId\" render={routerProps => {\n            return (\n              <Entities \n                routerProps={routerProps}\n                entities={this.state.entities}\n                assets={this.state.assets}\n                menuCollapsible ={this.menuCollapsible}\n                idCollap={this.state.idCollap}\n                printCode={this.printCode}\n              />\n            \n            );\n          }}/>\n          </Switch>\n        </main>\n\n        <footer className=\"App-footer\">\n\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const API = 'https://cors-anywhere.herokuapp.com/https://6y458uslg3.execute-api.eu-west-3.amazonaws.com/elixos/assets'\n\nconst fetchAssets= ()=>{\n  return fetch(API,).then(response => response.json())\n}\n\nexport {fetchAssets}","const API = 'https://cors-anywhere.herokuapp.com/https://6y458uslg3.execute-api.eu-west-3.amazonaws.com/elixos/entities'\n\nconst fetchEntities= ()=>{\n  return fetch(API).then(response => response.json())\n}\n\nexport {fetchEntities}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}